#usda 1.0
(
    customLayerData = {
        string creator = "USD for Autodesk 3ds Max: v0.2.24.0"
    }
    defaultPrim = "animated_cube_bbox"
    endTimeCode = 100
    framesPerSecond = 30
    metersPerUnit = 0.01
    startTimeCode = 0
    timeCodesPerSecond = 30
    upAxis = "Z"
)

def Xform "animated_cube_bbox"
{
    def Mesh "Box001"
    {
        float3[] extent.timeSamples = {
            0: [(-5, -5, 0), (5, 5, 10)],
        }
        int[] faceVertexCounts.timeSamples = {
            0: [4, 4, 4, 4, 4, 4],
        }
        int[] faceVertexIndices.timeSamples = {
            0: [0, 2, 3, 1, 4, 5, 7, 6, 0, 1, 5, 4, 1, 3, 7, 5, 3, 2, 6, 7, 2, 0, 4, 6],
        }
        point3f[] points.timeSamples = {
            0: [(-5, -5, 0), (5, -5, 0), (-5, 5, 0), (5, 5, 0), (-5, -5, 10), (5, -5, 10), (-5, 5, 10), (5, 5, 10)],
        }
        color3f[] primvars:displayColor = [(0.34117648, 0.88235295, 0.7764706)]
        texCoord2f[] primvars:map1 (
            interpolation = "faceVarying"
        )
        texCoord2f[] primvars:map1.timeSamples = {
            0: [(1, 0), (0, 0), (1, 1), (0, 1), (0, 0), (1, 0), (0, 1), (1, 1), (0, 0), (1, 0), (0, 1), (1, 1), (0, 0), (1, 0), (0, 1), (1, 1), (0, 0), (1, 0), (0, 1), (1, 1), (0, 0), (1, 0), (0, 1), (1, 1)],
        }
        int[] primvars:map1:indices.timeSamples = {
            0: [0, 2, 3, 1, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 20, 21, 23, 22],
        }
        float3[] primvars:normals (
            interpolation = "faceVarying"
        )
        float3[] primvars:normals.timeSamples = {
            0: [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)],
        }
        int[] primvars:normals:indices.timeSamples = {
            0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],
        }
        uniform token subdivisionScheme = "none"
        uniform token subsetFamily:materialBind:familyType = "partition"
        matrix4d xformOp:transform.timeSamples = {
            0: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ),
            1: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.01184, 1) ),
            2: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.04672, 1) ),
            3: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.10368, 1) ),
            4: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.18176, 1) ),
            5: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.28, 1) ),
            6: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.39744, 1) ),
            7: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.53312, 1) ),
            8: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.68608, 1) ),
            9: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0.85536, 1) ),
            10: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 1.04, 1) ),
            11: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 1.23904, 1) ),
            12: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 1.45152, 1) ),
            13: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 1.67648, 1) ),
            14: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 1.91296, 1) ),
            15: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 2.16, 1) ),
            16: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 2.41664, 1) ),
            17: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 2.68192, 1) ),
            18: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 2.95488, 1) ),
            19: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 3.23456, 1) ),
            20: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 3.52, 1) ),
            21: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 3.81024, 1) ),
            22: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 4.10432, 1) ),
            23: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 4.40128, 1) ),
            24: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 4.70016, 1) ),
            25: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 5, 1) ),
            26: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 5.29984, 1) ),
            27: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 5.59872, 1) ),
            28: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 5.89568, 1) ),
            29: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 6.18976, 1) ),
            30: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 6.48, 1) ),
            31: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 6.76544, 1) ),
            32: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 7.04512, 1) ),
            33: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 7.31808, 1) ),
            34: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 7.58336, 1) ),
            35: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 7.84, 1) ),
            36: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 8.08704, 1) ),
            37: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 8.32352, 1) ),
            38: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 8.54848, 1) ),
            39: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 8.76096, 1) ),
            40: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 8.96, 1) ),
            41: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 9.14464, 1) ),
            42: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 9.31392, 1) ),
            43: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 9.46688, 1) ),
            44: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 9.60256, 1) ),
            45: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 9.72, 1) ),
            46: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 9.81824, 1) ),
            47: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 9.89632, 1) ),
            48: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 9.95328, 1) ),
            49: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 9.98816, 1) ),
            50: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 10, 1) ),
            51: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.01184, 0, 10, 1) ),
            52: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.04672, 0, 10, 1) ),
            53: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.10368, 0, 10, 1) ),
            54: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.18176, 0, 10, 1) ),
            55: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.28, 0, 10, 1) ),
            56: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.39744, 0, 10, 1) ),
            57: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.53312, 0, 10, 1) ),
            58: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.68608, 0, 10, 1) ),
            59: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0.85536, 0, 10, 1) ),
            60: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (1.04, 0, 10, 1) ),
            61: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (1.23904, 0, 10, 1) ),
            62: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (1.45152, 0, 10, 1) ),
            63: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (1.67648, 0, 10, 1) ),
            64: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (1.91296, 0, 10, 1) ),
            65: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (2.16, 0, 10, 1) ),
            66: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (2.41664, 0, 10, 1) ),
            67: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (2.68192, 0, 10, 1) ),
            68: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (2.95488, 0, 10, 1) ),
            69: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (3.23456, 0, 10, 1) ),
            70: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (3.52, 0, 10, 1) ),
            71: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (3.81024, 0, 10, 1) ),
            72: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (4.10432, 0, 10, 1) ),
            73: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (4.40128, 0, 10, 1) ),
            74: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (4.70016, 0, 10, 1) ),
            75: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (5, 0, 10, 1) ),
            76: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (5.29984, 0, 10, 1) ),
            77: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (5.59872, 0, 10, 1) ),
            78: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (5.89568, 0, 10, 1) ),
            79: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (6.18976, 0, 10, 1) ),
            80: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (6.48, 0, 10, 1) ),
            81: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (6.76544, 0, 10, 1) ),
            82: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (7.04512, 0, 10, 1) ),
            83: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (7.31808, 0, 10, 1) ),
            84: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (7.58336, 0, 10, 1) ),
            85: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (7.84, 0, 10, 1) ),
            86: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (8.08704, 0, 10, 1) ),
            87: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (8.32352, 0, 10, 1) ),
            88: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (8.54848, 0, 10, 1) ),
            89: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (8.76096, 0, 10, 1) ),
            90: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (8.96, 0, 10, 1) ),
            91: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (9.14464, 0, 10, 1) ),
            92: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (9.31392, 0, 10, 1) ),
            93: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (9.46688, 0, 10, 1) ),
            94: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (9.60256, 0, 10, 1) ),
            95: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (9.72, 0, 10, 1) ),
            96: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (9.81824, 0, 10, 1) ),
            97: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (9.89632, 0, 10, 1) ),
            98: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (9.95328, 0, 10, 1) ),
            99: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (9.98816, 0, 10, 1) ),
            100: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (10, 0, 10, 1) ),
        }
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def GeomSubset "_1_" (
            customData = {
                dictionary "3dsmax" = {
                    int matId = 1
                }
            }
        )
        {
            uniform token elementType = "face"
            uniform token familyName = "materialBind"
            int[] indices = [1]
        }

        def GeomSubset "_2_" (
            customData = {
                dictionary "3dsmax" = {
                    int matId = 2
                }
            }
        )
        {
            uniform token elementType = "face"
            uniform token familyName = "materialBind"
            int[] indices = [0]
        }

        def GeomSubset "_3_" (
            customData = {
                dictionary "3dsmax" = {
                    int matId = 3
                }
            }
        )
        {
            uniform token elementType = "face"
            uniform token familyName = "materialBind"
            int[] indices = [5]
        }

        def GeomSubset "_4_" (
            customData = {
                dictionary "3dsmax" = {
                    int matId = 4
                }
            }
        )
        {
            uniform token elementType = "face"
            uniform token familyName = "materialBind"
            int[] indices = [3]
        }

        def GeomSubset "_5_" (
            customData = {
                dictionary "3dsmax" = {
                    int matId = 5
                }
            }
        )
        {
            uniform token elementType = "face"
            uniform token familyName = "materialBind"
            int[] indices = [2]
        }

        def GeomSubset "_6_" (
            customData = {
                dictionary "3dsmax" = {
                    int matId = 6
                }
            }
        )
        {
            uniform token elementType = "face"
            uniform token familyName = "materialBind"
            int[] indices = [4]
        }
    }
}

