#usda 1.0
(
    customLayerData = {
        string creator = "USD for Autodesk 3ds Max: v0.2.4.0"
    }
    defaultPrim = "scene_graph_instances"
    metersPerUnit = 0.0254
    upAxis = "Z"
)

def Xform "scene_graph_instances"
{
    def Xform "Box001" (
        prepend inherits = </scene_graph_instances/_class_Box001>
        instanceable = true
    )
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-40.5949, -2.98091, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    class Class "_class_Box001"
    {
        def Mesh "Box001"
        {
            float3[] extent = [(-5, -5, 0), (5, 5, 10)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 2, 3, 1, 4, 5, 7, 6, 0, 1, 5, 4, 1, 3, 7, 5, 3, 2, 6, 7, 2, 0, 4, 6]
            point3f[] points = [(-5, -5, 0), (5, -5, 0), (-5, 5, 0), (5, 5, 0), (-5, -5, 10), (5, -5, 10), (-5, 5, 10), (5, 5, 10)]
            color3f[] primvars:displayColor = [(0.54901963, 0.34509805, 0.88235295)]
            texCoord2f[] primvars:map1 = [(1, 0), (1, 1), (0, 1), (0, 0), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1)] (
                interpolation = "faceVarying"
            )
            float3[] primvars:normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "partition"

            def GeomSubset "_1_" (
                customData = {
                    dictionary "3dsmax" = {
                        int matId = 1
                    }
                }
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [1]
            }

            def GeomSubset "_2_" (
                customData = {
                    dictionary "3dsmax" = {
                        int matId = 2
                    }
                }
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0]
            }

            def GeomSubset "_3_" (
                customData = {
                    dictionary "3dsmax" = {
                        int matId = 3
                    }
                }
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [5]
            }

            def GeomSubset "_4_" (
                customData = {
                    dictionary "3dsmax" = {
                        int matId = 4
                    }
                }
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [3]
            }

            def GeomSubset "_5_" (
                customData = {
                    dictionary "3dsmax" = {
                        int matId = 5
                    }
                }
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [2]
            }

            def GeomSubset "_6_" (
                customData = {
                    dictionary "3dsmax" = {
                        int matId = 6
                    }
                }
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [4]
            }
        }
    }

    def Xform "Box002" (
        prepend inherits = </scene_graph_instances/_class_Box001>
        instanceable = true
    )
    {
        rel material:binding = </scene_graph_instances/Materials/Material__26>
        matrix4d xformOp:transform = ( (0.332609, -0.292487, 0, 0), (0.230197, 0.261773, 0.273242, 0), (-0.180439, -0.20519, 0.348591, 0), (-25.4197, -2.98091, 20.6732, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Xform "Box003" (
        prepend inherits = </scene_graph_instances/_class_Box001>
        instanceable = true
    )
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-9.60227, -2.98091, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def Xform "Box004" (
        prepend inherits = </scene_graph_instances/_class_Box001>
        instanceable = true
    )
    {
        rel material:binding = </scene_graph_instances/Materials/Material__26>
        matrix4d xformOp:transform = ( (0.822024, 0.569453, 0, 0), (-0.569453, 0.822024, 0, 0), (0, 0, 1, 0), (5.81184, -2.98091, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }

    def "Materials"
    {
        def Material "Material__26"
        {
            token outputs:surface.connect = </scene_graph_instances/Materials/Material__26/UsdPreviewSurface.outputs:surface>

            def Shader "UsdPreviewSurface"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0
                color3f inputs:diffuseColor = (1, 0, 0)
                color3f inputs:emissiveColor = (0, 0, 0)
                float inputs:ior = 1.52
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0
                token outputs:surface
            }
        }
    }
}

