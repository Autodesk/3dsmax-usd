#usda 1.0
(
    defaultPrim = "sphere_uv_vertex"
    metersPerUnit = 0.0254
    upAxis = "Z"
    endTimeCode = 1
    startTimeCode = 0
)

def Xform "sphere_uv_vertex"
{
    def Mesh "Sphere001"
    {
        float3[] extent = [(-10, -10, -10), (10, 10, 10)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 0, 3, 4, 0, 4, 1, 5, 2, 1, 5, 3, 2, 5, 4, 3, 5, 1, 4]
        point3f[] points = [(0, 0, 10), (-4.371139e-7, 10, -4.371139e-7), (-10, -8.742278e-7, -4.371139e-7), (1.1924881e-7, -10, -4.371139e-7), (10, 0.0000017484556, -4.371139e-7), (0, 0, -10)]
        color3f[] primvars:displayColor = [(0.89411765, 0.6, 0.72156864)]

        texCoord2f[] primvars:map1(
            interpolation = "vertex"
        )

        texCoord2f[] primvars:map1.timeSamples = {
          0 : [(0, 1), (0.25, 1), (0.5, 1), (0.75, 1), (0, 0.5), (0.25, 0.5)],
          1 : [(1, 0), (0.75, 0), (0.5, 0), (0.25, 0), (1, 0.5), (0.75, 0.5)] 
        }   
        uniform token subdivisionScheme = "none"
        
        rel material:binding = </sphere_uv_vertex/Materials/Material__25>
    }
    
    def "Materials"
    {
        def Material "Material__25"
        {
            token inputs:frame:map1 = "map1"
            token outputs:surface.connect = </sphere_uv_vertex/Materials/Material__25/UsdPreviewSurface.outputs:surface>

            def Shader "UsdPreviewSurface"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0
                color3f inputs:diffuseColor.connect = </sphere_uv_vertex/Materials/Map__1.outputs:rgb>
                color3f inputs:emissiveColor = (0, 0, 0)
                float inputs:ior = 1.52
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0
                token outputs:surface
            }
        }

        def Shader "Map__1"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @uv_checker.png@
            float2 inputs:st.connect = </sphere_uv_vertex/Materials/Map__1/TextureTransform_map1.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb

            def Shader "PrimvarReader_map1"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </sphere_uv_vertex/Materials/Material__25.inputs:frame:map1>
                float2 outputs:result
            }

            def Shader "TextureTransform_map1"
            {
                uniform token info:id = "UsdTransform2d"
                float2 inputs:in.connect = </sphere_uv_vertex/Materials/Map__1/PrimvarReader_map1.outputs:result>
                float inputs:rotation = 0
                float2 inputs:scale = (1, 1)
                float2 inputs:translation = (0, 0)
                float2 outputs:result
            }
        }
    }
}

